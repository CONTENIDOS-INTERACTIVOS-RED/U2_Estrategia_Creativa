{"remainingRequest":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/src/views/curso/Tema2.vue?vue&type=template&id=253732a8&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/src/views/curso/Tema2.vue","mtime":1758491103072},{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Estrategia_Creativa/U2_Estrategia_Creativa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}